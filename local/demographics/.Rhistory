# load packages
list.of.packages <- c("readxl")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]                           # compare the list to the installed packages list and add missing packages to new list
if(length(new.packages)) install.packages(new.packages, dependencies = TRUE)                                          # install missing packages
lapply(list.of.packages,library,character.only = TRUE)                                                                # load packages
# load data
WB <- file.path("~", "Box", "LukeLab", "NIH Dyslexia Study", "data", "participants", "master.xlsx")
df <- read_excel(WB)
View(df)
library(dplyr)
df %>%
select(mriEtGood = TRUE,
wasiVocab != NA)
df %>%
select(mriEtGood = TRUE,
wasiVocab = NA)
df %>%
select(mriEtGood = TRUE)
df %>%
filter(mriEtGood = TRUE,
wasiVocab != is.na)
df %>%
filter(mriEtGood == TRUE,
wasiVocab != is.na)
df %>%
filter(mriEtGood == TRUE,
!is.na(wasiVocab))
VARS <- c("group", "wasiVocab", "wasiMatrix", "gortRate", "gortAccuracy", "gortFluency",
"ctoppElision", "ctoppBlendingWords", "ctoppPhonemeIsolation",
"ctoppRapidDigitTime", "ctoppRapidDigitError",
"ctoppRapidLetterTime", "ctoppRapidLetterError",
"Are you a student at BYU or UVU?",
"Can you provide documentation of this diagnosis?",
"Have you ever been diagnosed with other learning disorders?",
"Have you ever been diagnosed with depression, anxiety, a learning disability, ADD/ADHD, or any other neurologic or psychiatric disorder?",
"Are you male or female?",
"What is your age?",
"How would you describe your ethnicity?"
"How would you describe your race?"
)
VARS <- c("group", "wasiVocab", "wasiMatrix", "gortRate", "gortAccuracy", "gortFluency",
"ctoppElision", "ctoppBlendingWords", "ctoppPhonemeIsolation",
"ctoppRapidDigitTime", "ctoppRapidDigitError",
"ctoppRapidLetterTime", "ctoppRapidLetterError",
"Are you a student at BYU or UVU?",
"Can you provide documentation of this diagnosis?",
"Have you ever been diagnosed with other learning disorders?",
"Have you ever been diagnosed with depression, anxiety, a learning disability, ADD/ADHD, or any other neurologic or psychiatric disorder?",
"Are you male or female?",
"What is your age?",
"How would you describe your ethnicity?",
"How would you describe your race?"
)
df <- df %>%
filter(mriEtGood == TRUE,
structMri == TRUE,
!is.na(wasiVocab)) %>%
select(VARS)
# load data
WB <- file.path("~", "Box", "LukeLab", "NIH Dyslexia Study", "data", "participants", "master.xlsx")
df <- read_excel(WB)
VARS <- c("group", "wasiVocab", "wasiMatrix", "gortRate", "gortAccuracy", "gortFluency",
"ctoppElision", "ctoppBlendingWords", "ctoppPhonemeIsolation",
"ctoppRapidDigitTime", "ctoppRapidDigitError",
"ctoppRapidLetterTime", "ctoppRapidLetterError",
"Are you a student at BYU or UVU?",
"Can you provide documentation of this diagnosis?",
"Have you ever been diagnosed with other learning disorders?",
"Have you ever been diagnosed with depression, anxiety, a learning disability, ADD/ADHD, or any other neurologic or psychiatric disorder?",
"Are you male or female?",
"What is your age?",
"How would you describe your ethnicity?",
"How would you describe your race?"
)
df <- df %>%
filter(mriEtGood == TRUE,
structMri == TRUE,
!is.na(wasiVocab)) %>%
select(VARS)
View(df)
# format and rename variables
LABS <- c("Group", "Vocabulary Score", "Matrix Reasoning", "Reading Rate", "Reading Accuracy", "Reading Fluency", "Comprehension"
"Elision", "Blending Words", "Phoneme Isolation",
"Rapid Digit Naming Time", "Rapid Digit Naming Error",
"Rapid Letter Naming Time", "Rapid Letter Naming Error",
"University student",
"Other learning disorders",
"Other psychiatric disorders",
"Gender",
"Age",
"Ethnicity",
"Race")
# format and rename variables
LABS <- c("Group", "Vocabulary Score", "Matrix Reasoning", "Reading Rate", "Reading Accuracy", "Reading Fluency", "Comprehension",
"Elision", "Blending Words", "Phoneme Isolation",
"Rapid Digit Naming Time", "Rapid Digit Naming Error",
"Rapid Letter Naming Time", "Rapid Letter Naming Error",
"University student",
"Other learning disorders",
"Other psychiatric disorders",
"Gender",
"Age",
"Ethnicity",
"Race")
for (i in LABS) {
print(i)
}
length(LABS)
LABS[1]
LABS[2]
LABS[6]
label(df$group)
for (i in 1:length(LABS)) {
label(df$i) <- LABS[i]
}
label(df$group)
i <- 1
label(df$i) <- as.character(LABS[i])
for (i in 1:length(LABS)) {print LABS[i]}
for (i in 1:length(LABS)) {print(LABS[i])}
for (i in 1:length(LABS)) {print(LABS[[i]])}
for (i in 1:length(LABS)) {
label(df$i) <- LABS[[i]]
}
for (i in 1:length(LABS)) {
label(df[i]) <- LABS[i]
}
label(df$group)
for (i in 1:length(LABS)) {
print(LABS[i])
print(df[i])
label(df[i]) <- LABS[i]
}
names(df) <- LABS
FACTORS <- c("Group", "University student", "Other psychiatric disorders", "Other psychiatric disorders", "Gender", "Ethnicity", "Race")
df[,FACTORS]
lapply(df[,FACTORS],as.factor)
df[,FACTORS] <- lapply(df[,FACTORS],as.factor)
fac_it <- function(x) {
x <- as.factor(x)
}
fac_it <- function(x) {
for (i in x) {
i <- as.factor(i)
}
}
apply(df[,FACTORS],fac_it)
sapply(df[,FACTORS],fac_it)
fac_it <- function(x) {
for (i in x) {
i <- as.factor(i)
}
return(i)
}
sapply(df[,FACTORS],fac_it)
as.factor(df[,FACTORS])
for (i in FACTORS) {
df[[i]] <- as.factor(df[[i]])
}
View(df)
library(table1)
formala("~","Group", "University student")
formula("~","Group", "University student")
right <- paste(LABS, sep="+")
right
right <- paste("~", LABS, sep="+")
right
paste(LABS, sep="+")
# create table 1
LABS2 <- c("Vocabulary Score", "Matrix Reasoning",
"Reading Rate", "Reading Accuracy", "Reading Fluency", "Comprehension",
"Elision", "Blending Words", "Phoneme Isolation",
"Rapid Digit Naming Time", "Rapid Digit Naming Error",
"Rapid Letter Naming Time", "Rapid Letter Naming Error",
"University student",
"Other learning disorders",
"Other psychiatric disorders",
"Gender",
"Age",
"Ethnicity",
"Race")
fmla <- paste("Group", paste(LABS2, collapse = " + "), sep = "~")
fmla <- paste("Group", paste(LABS2, collapse = " + "), sep = " ~ ")
table1(as.formula(fmla), data=df)
fmla <- paste("Group", paste(LABS2, collapse = "" + ""), sep = " ~ ")
table1(as.formula(fmla), data=df)
fmla
fmla <- as.formula(Group ~ `Vocabulary Score` + `Matrix Reasoning` + `Reading Rate` +
`Reading Accuracy` + `Reading Fluency` + Comprehension + Elision +
`Blending Words` + `Phoneme Isolation` + `Rapid Digit Naming Time` +
`Rapid Digit Naming Error` + `Rapid Letter Naming Time` +
`Rapid Letter Naming Error` + `University student` +
`Other learning disorders` + `Other psychiatric disorders` + Gender + Age +
Ethnicity + Race)
table1(fmla, data=df)
describe(df)
describe.by(df, group = group)
describe.by(df, group = Group)
df
describe.by(df, group = df$Group)
test <- describeBy(df, group = df$Group)
View(test)
summary(df)
install.packages("furniture")
detach("table1")
detach(table1)
detach(packages::table1)
detach(package:table1)
library(furniture)
library(table1)
test <- table1(fmla, data=df, droplevels = TRUE)
test
detach(package:table1)
to_latex(test)
table1(df, splitby = "Group")
detach("package:furniture", unload = TRUE)
library(furniture)
detach("package:furniture", unload = TRUE)
install.packages("stargazer")
library(table1)
render.categorical.default(df$Group)
render.continuous.default(df$Age)
summary(df)
test<-summary(df)
test
describe(df)
test<-describe(df)
View(test)
install.packages(xtable)
install.packages("xtable")
as.data.frame(test)
table1(fmla, data=df, droplevels = TRUE)
test <- table1(fmla, data=df, droplevels = TRUE)
as.data.frame(test)
describe(df)
describeBy(df, df$Group)
describe(df, by = df$Group)
test <- describe(df, by = df$Group)
as.data.frame(test)
summary(df)
install.packages("reporttools")
library(reporttools)
tableNominal(df)
library(table1)
fmla <- as.formula(Group ~ `Vocabulary Score` + `Matrix Reasoning` + `Reading Rate` +
`Reading Accuracy` + `Reading Fluency` + Comprehension + Elision +
`Blending Words` + `Phoneme Isolation` + `Rapid Digit Naming Time` +
`Rapid Digit Naming Error` + `Rapid Letter Naming Time` +
`Rapid Letter Naming Error` + `University student` +
`Other learning disorders` + `Other psychiatric disorders` + Gender + Age +
Ethnicity + Race)
table1(fmla | Group, data=df, droplevels = TRUE)
table1(fmla | "Group", data=df, droplevels = TRUE)
fmla <- as.formula(~ `Vocabulary Score` + `Matrix Reasoning` + `Reading Rate` +
`Reading Accuracy` + `Reading Fluency` + Comprehension + Elision +
`Blending Words` + `Phoneme Isolation` + `Rapid Digit Naming Time` +
`Rapid Digit Naming Error` + `Rapid Letter Naming Time` +
`Rapid Letter Naming Error` + `University student` +
`Other learning disorders` + `Other psychiatric disorders` + Gender + Age +
Ethnicity + Race | Group)
table1(fmla, data=df, droplevels = TRUE)
describe.by(df[,c(FACTORS)], group = df$Group)
describeBy(df[,c(FACTORS)], group = df$Group)
summary(df)
as.data.frame(summary(df))
df %>%
select("Group", CONTVARS) %>%
group_by("Group") %>%
summarise(Mean = mean(),
SD = sd()
)
# create table 1
CONTVARS <- c("Vocabulary Score", "Matrix Reasoning",
"Reading Rate", "Reading Accuracy", "Reading Fluency", "Comprehension",
"Elision", "Blending Words", "Phoneme Isolation",
"Rapid Digit Naming Time", "Rapid Digit Naming Error",
"Rapid Letter Naming Time", "Rapid Letter Naming Error",
"Age")
df %>%
select("Group", CONTVARS) %>%
group_by("Group") %>%
summarise(Mean = mean(),
SD = sd()
)
df %>%
select("Group", CONTVARS) %>%
group_by("Group") %>%
summarise_all(Mean = mean(),
SD = sd()
)
df %>%
select("Group", CONTVARS) %>%
group_by("Group") %>%
summarise_all(Mean = mean,
SD = sd
)
rep(2,1000)
library(reshape2)
View(df)
df %>%
select("Group", CONTVARS) %>%
gather("vars","values", "Group")
library(tidyr)
df %>%
select("Group", CONTVARS) %>%
gather("vars","values", "Group")
df %>%
select("Group", CONTVARS) %>%
gather("vars","values", -Group)
df %>%
select("Group", CONTVARS) %>%
gather("vars","values", -Group) %>%
spread(Group, values)
df %>%
select("Group", CONTVARS) %>%
gather("vars","values", -Group)
df %>%
select("Group", CONTVARS) %>%
gather("vars","values", -Group) %>%
spread(vars, Group)
df %>%
select("Group", CONTVARS) %>%
gather("vars","values", -Group) %>%
spread(vars, values)
df %>%
select("Group", CONTVARS) %>%
gather("vars","values", -Group)
df %>%
select("Group", CONTVARS) %>%
gather("vars","values", -Group) %>%
group_by(group, vars) %>%
summarise(Mean = mean(values))
df %>%
select("Group", CONTVARS) %>%
gather("vars","values", -Group) %>%
group_by(Group, vars) %>%
summarise(Mean = mean(values))
df %>%
select("Group", CONTVARS) %>%
gather("vars","values", -Group) %>%
group_by(vars, Group) %>%
summarise(Mean = mean(values))
df_cont <- df %>%
select("Group", CONTVARS) %>%
gather("vars","values", -Group) %>%
group_by(vars, Group)
class(df_cont$values)
df %>%
select("Group", CONTVARS) %>%
gather("vars","values", -Group) %>%
group_by(vars, Group) %>%
summarise(Mean = mean(as.numeric(values)),
SD = sd(as.numeric(values)))
detach("package:table1", unload = TRUE)
install.packages(tableone)
install.packages("tableone")
library(tableone)
LABS2 <- c("Vocabulary Score", "Matrix Reasoning",
"Reading Rate", "Reading Accuracy", "Reading Fluency", "Comprehension",
"Elision", "Blending Words", "Phoneme Isolation",
"Rapid Digit Naming Time", "Rapid Digit Naming Error",
"Rapid Letter Naming Time", "Rapid Letter Naming Error",
"University student",
"Other learning disorders",
"Other psychiatric disorders",
"Gender",
"Age",
"Ethnicity",
"Race")
CreateTableOne(LABS2, "Group", df)
example(CreateTableOne)
tab_tex <- print(p, printToggle = FALSE, soSpaces = TRUE)
tab <- CreateTableOne(CreateTableOne(LABS2, "Group", df))
tab <- CreateTableOne(LABS2, "Group", df)
tab_tex <- print(tab, printToggle = FALSE, soSpaces = TRUE)
View(tab_tex)
tab_tex <- print(tab, printToggle = FALSE, noSpaces = TRUE)
View(tab_tex)
